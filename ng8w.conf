{
"ram":true,
"ssd":true,
"pre_running_commands":[
        ["sh","%(ng8w)s/conf/pre_running_commands.sh"],
        ["sh","-c","echo 'noop' > /sys/block/sda/queue/scheduler; echo 'deadline'>/sys/block/sdb/queue/scheduler"]
],
"init_commands":[
        ["sh","-c","for useless in `seq 10`; do sleep 1; curl http://127.0.0.2:8061/status/uptime 1>/dev/null 2>/dev/null ; if [[ \"$?\" == \"0\" ]]; then break; fi; sleep 1; done"],
        ["curl","-s","http://127.0.0.2:8061/user/add","--data","{\"user_name\":\"admin\",\"name\":\"admin\",\"role\":\"admin\",\"email\":\"admin@local\",\"mobile\":\"admin@local\",\"pass\":\"LGQ2XE2p03f5D+YJGa1fmMHb15HZw+Newfsb58CWTvpvST+hbW3OeL2wS2l+vX3Lxfsnpn5f11qAwPy/OkdGKDLyaMfWHuYbYVCpZy+qH8wJZ7RX18xD6xqic6K9kl2N3AnwQW9vWVylhvRAyBmFYq4yMm/9eraZIueDNzoMwzT1NmNP0NXv82lxR5okR04FvBWPAucpcYO3BOgajgj4ujKi/i94dYz8luevMB56lFNzOGcTT/+Du/3rUwqjOIlXUxQtKxPWQaxkUQZFOk2TZeYD0t5z7bQyKRGeIfUnLUILq98modgf/AGXuj2fZtTzWTWG25rOO61S4xwzZTOEbg==\"}"],
        ["curl","-s","http://127.0.0.2:8061/user/add","--data","{\"user_name\":\"user\",\"name\":\"user\",\"role\":\"operator\",\"email\":\"user@local\",\"mobile\":\"user@local\",\"pass\":\"UKYJt3nOTMX+23jpttGloLPfi5PEZBSg288m9vDMjvulXjDq2Nxky7NkyBxEmr+6KOVAHnmr8RLEAkSbLMx73rJZ8DG0zZvYhgtmpZIPvLIYS6SCGg8VUB3ZIOmOLUInqPLI1IJUmNPwEDhGvhuv8kn/hneR49HLcr8I9PknA2mw5OCuy9+x/LzNuccXJM/+a4sqV6p6DX4tCP0A/WbMpqHBQLK43WyaqChySYIsWxBrGSy1Q/yWmLZu2AYVAwReoeedNSqvpFdSEj9A86X5k3XZSBPB2WueKT5jHs/ifZGCCEi/jQR+77zqfunjKWLIOtvQxygN6mKthv9GfH5++Q==\"}"],
        ["curl","-s","http://127.0.0.2:8061/user/add","--data","{\"user_name\":\"audit\",\"name\":\"audit\",\"role\":\"auditor\",\"email\":\"audit@local\",\"mobile\":\"audit@local\",\"pass\":\"WXX2cn7jW2tOUe4JgHpcDUOL8nGNsunOYO1zROApmw9skvXDg18ansqRCIuWvQMo8IClHBJ7YIHBXUYPF4mMUZxBuIJe8iI2zpR+tZ7YymTwhQHHwEJ/k+hhFyISP/61jzlxlL9sxiP0Dm4j+B4viBNicsQ6lA5TyfP1i3jMp/dhRWPQfKiOhwXtEHmLF5quKHlkPhLe7xWry8+92IYDu3pJqZe37s2uxvuD6prhtQQPdzAw4BOJc3j0AxRwtuLTBtSgb66kYFKDyyydgoigdfI+jLbN6SPv6nJqnuNNKwWLcR1owiG1z66PDWLd3/jWKsVSqq6l7xm9xwwuAlBtug==\"}"],
        ["%(ng8w)s/bin/recover_user_info.py"]
    ],
"items":[
            {
                "name": "mongod", 
                "description": "mongod",
                "stdout": "%(ng8w)s/var/log/ng8w.mongod.out", 
                "stdin": "/dev/null", 
                "command": [
                    "%(ng8w)s/opt/tokumx/bin/mongod",
                    "-f",
                    "%(ng8w)s/conf/tokumx.conf",
                    "--logpath",
                    "%(ng8w)s/var/log/tokumx.log"
                ], 
                "check": [
                    "/usr/bin/mongod"
                ],
                "classify": "infrastructure",
                "stderr": "%(ng8w)s/var/log/ng8w.mongod.err", 
                "type": "MongoDbTask", 
                "pidfile": "tokumx.pid"
            }, 
            {
                "name": "beanstalkd", 
                "description": "beanstalkd",
                "stdout": "%(ng8w)s/var/log/ng8w.beanstalkd.out", 
                "stdin": "/dev/null", 
                "command": [
                    "%(ng8w)s/opt/beanstalkd/beanstalkd",
                    "-b",
                    "%(ng8w)s/var/lib/beanstalkd/binlog",
                    "-z",
                    "16777215",
                    "-F"
                ], 
                "check": [
                    "/usr/bin/beanstalkd"
                ],
                "classify": "infrastructure",
                "stderr": "%(ng8w)s/var/log/ng8w.beanstalkd.err", 
                "type": "Task", 
                "pidfile": "beanstalkd.pid"
            },
            {
                "name": "update", 
                "description": "ng8w update server",
                "stdout": "%(ng8w)s/var/log/ng8w.update.out", 
                "stdin": "/dev/null", 
                "command": [
                    "%(ng8w)s/bin/update_server.py"
                ], 
                "check": [
                    "%(ng8w)s/bin/update_server.py"
                ],
                "classify": "infrastructure",
                "stderr": "%(ng8w)s/var/log/ng8w.update.err", 
                "type": "Task", 
                "pidfile": "ng8w.update.pid"
            }, 
            {
                "name": "space_watcher", 
                "description": "ng8w space watcher",
                "stdout": "%(ng8w)s/var/log/ng8w.space_watcher.out", 
                "stdin": "/dev/null", 
                "command": [
                    "%(ng8w)s/bin/space_watch_cleaner.py"
                ], 
                "check": [
                    "%(ng8w)s/bin/space_watch_cleaner.py"
                ],
                "classify": "infrastructure",
                "stderr": "%(ng8w)s/var/log/ng8w.space_watcher.err", 
                "type": "Task", 
                "pidfile": "ng8w.space_watcher.pid"
            },
            {
                "name": "haproxy", 
                "description": "nxweb",
                "stdout": "%(ng8w)s/var/log/haproxy.nxweb.out", 
                "stdin": "/dev/null", 
                "command": [
                    "%(ng8w)s/opt/haproxy/haproxy",
                    "-f",
                    "%(ng8w)s/conf/haproxy.conf"
                ],  
                "check": [
                    "opt/haproxy/haproxy"
                ],
                "classify": "infrastructure",
                "stderr": "%(ng8w)s/var/log/haproxy.nxweb.err", 
                "type": "Task", 
                "pidfile": "haproxy.pid"
            }, 
            {
                "name": "nginx", 
                "description": "nginx",
                "stdout": "%(ng8w)s/var/log/ng8w.nginx.out", 
                "stdin": "/dev/null", 
                "command": [
                    "%(ng8w)s/opt/nginx/nginx",
                    "-p",
                    "%(ng8w)s/var/nginx",
                    "-c",
                    "%(ng8w)s/conf/nginx.conf"
                ],  
                "check": [
                    "opt/nginx/nginx"
                ],
                "classify": "infrastructure",
                "stderr": "%(ng8w)s/var/log/ng8w.nginx.err", 
                "type": "Task", 
                "pidfile": "nginx.pid"
            }, 
            {
                "name": "ng8w/api", 
                "description": "API",
                "stdout": "%(ng8w)s/var/log/ng8w.api.out", 
                "stdin": "/dev/null", 
                "command": [
                  "%(ng8w)s/bin/apiup"
                ],  
                "check": [
                  "%(ng8w)s/bin/apiup"
                ],
                "classify": "infrastructure",
                "stderr": "%(ng8w)s/var/log/ng8w.api.err", 
                "type": "Task", 
                "pidfile": "ng8w.api.pid"
            }, 
            {
                "name": "ng8w/learn", 
                "description": "“般若”智能引擎",
                "stdout": "%(ng8w)s/var/log/ng8w.cp.out", 
                "stdin": "/dev/null", 
                "command": [
                    "%(ng8w)s/bin/ng8w_cp.py"
                ],  
                "check": [
                    "bin/ng8w_cp.py"
                ],
                "classify": "identifier",
                "stderr": "%(ng8w)s/var/log/ng8w.cp.err", 
                "type": "Task", 
                "pidfile": "ng8w.cp.pid"
            }, 
            {
                "name": "container/apsc",
                "description": "apsc runc container",
                "stdin": "/dev/null",
                "stdout": "%(ng8w)s/var/log/ng8w.container.apsc.out",
                "stderr": "%(ng8w)s/var/log/ng8w.container.apsc.err",
                "command": [
                    "%(ng8w)s/bin/container.sh",
                    "start",
                    "--config=%(ng8w)s/conf/container/apsc/apsc.conf",
                    "--ssd=%(ssd)s",
                    "--ram=%(ram)s"
                ],
                "check": [
                    "various"
                ],
                "classify": "container",
                "type": "Task",
                "pidfile": "ng8w.container.apsc.pid"
            },
            {
                "name": "antiy/kk", 
                "description": "追影动态鉴定器",
                "stdout": "%(ng8w)s/var/log/ng8w.kk.out", 
                "stdin": "/dev/null", 
                "command": [
                    "%(ng8w)s/bin/kk_analyzer.py",
                    "start",
                    "--ssd=%(ssd)s",
                    "--ram=%(ram)s",
                    "--conf=%(ng8w)s/conf/az_xp_conf.conf"
                ],  
                "check": [
                    "bin/kk_analyzer.py"
                ],
                "classify": "identifier",
                "stderr": "%(ng8w)s/var/log/ng8w.kk.err", 
                "type": "Task", 
                "pidfile": "ng8w.kk.pid"
            }, 
            {
                "name": "antiy/kk/judge",
                "description": "追影动态鉴定器分析模块",
                "stdout": "%(ng8w)s/var/log/ng8w.kk.judge.out",
                "stdin": "/dev/null",
                "command": [
                    "%(ng8w)s/bin/kk_analyzer_judge.py"
                ],
                "check": [
                    "bin/kk_analyzer_judge.py"
                ],
                "classify": "identifier",
                "stderr": "%(ng8w)s/var/log/ng8w.kk.judge.err",
                "type": "Task",
                "pidfile": "ng8w.kk.judge.pid"
            },
            {
                "name": "kingsoft/cloud", 
                "description": "金山公有云鉴定器",
                "stdout": "%(ng8w)s/var/log/ng8w.cloud.out", 
                "stdin": "/dev/null", 
                "command": [
                    "%(ng8w)s/bin/cloud_analyzer.py", 
                    "private",
                    "--url=http://192.168.122.2/cloud3"
                ],  
                "check": [
                    "bin/cloud_analyzer.py"
                ],
                "classify": "identifier",
                "stderr": "%(ng8w)s/var/log/ng8w.cloud.err", 
                "type": "Task", 
                "pidfile": "ng8w.cloud.pid"
            },
            {
                "name": "RESCANER",
                "description": "jid rescan job resend",
                "stdout": "%(ng8w)s/var/log/ng8w.rescan.out",
                "stdin": "/dev/null",
                "command": [
                    "%(ng8w)s/bin/recheck_analyzer.py"
                ],
                "check": [
                    "%(ng8w)s/bin/recheck_analyzer.py"
                ],
                "classify": "identifier",
                "stderr": "%(ng8w)s/var/log/ng8w.rescan.err",
                "type": "Task",
                "pidfile": "ng8w.rescan.pid"
            },
            {
                "name": "URLSCAN",
                "description": "URLContentScanner",
                "stdout": "%(ng8w)s/var/log/ng8w.url.out",
                "stdin": "/dev/null",
                "command": [
                    "%(ng8w)s/bin/url_content_scan.py"
                ],
                "check": [
                    "%(ng8w)s/bin/url_content_scan.py"
                ],
                "classify": "identifier",
                "stderr": "%(ng8w)s/var/log/ng8w.url.err",
                "type": "Task",
                "pidfile": "ng8w.url.pid"
            },
            {
                "name": "vm/M", 
                "description": "M",
                "stdout": "%(ng8w)s/var/log/ng8w.vm.m01.out", 
                "stdin": "/dev/null", 
                "command": [
                    "%(ng8w)s/bin/vm_plugin.py", 
                    "start",
                    "--config",
                    "%(ng8w)s/conf/vm/m01.conf",
                    "--ssd=%(ssd)s",
                    "--ram=%(ram)s",
                    "-d"
                ],  
                "check": [
                    "%(ng8w)s/img.disk/xpsp3.m.img"
                ],
                "classify": "vm",
                "stderr": "%(ng8w)s/var/log/ng8w.vm.m01.err", 
                "type": "Task", 
                "pidfile": "ng8w.vm.m.pid"
            },
            {
                "name": "analyzer_watcher",
                "description": "analyzer_watcher",
                "stdout": "%(ng8w)s/var/log/ng8w.analyzer_watch.out",
                "stdin": "/dev/null",
                "command": [
                    "%(ng8w)s/bin/check_analyzer.py"
                ],
                "check": [
		    "%(ng8w)s/bin/check_analyzer.py"
                ],
                "classify": "Task",
                "stderr": "%(ng8w)s/var/log/ng8w.analyzer_watch.err",
                "type": "Task",
                "pidfile": "ng8w.analyzer_watch.pid"
            },
            {
                "name": "email_analyzer",
                "description": "email_analyzer",
                "stdout": "%(ng8w)s/var/log/ng8w.email_analyzer.out",
                "stdin": "/dev/null",
                "command": [
                    "%(ng8w)s/bin/email_scanner.py"
                ],
                "check": [
		    "%(ng8w)s/bin/email_scanner.py"
                ],
                "classify": "Task",
                "stderr": "%(ng8w)s/var/log/ng8w.email_analyzer.err",
                "type": "Task",
                "pidfile": "ng8w.email_analyzer.pid"
            },
            {
                "name": "classify_analyzer",
                "description": "Classify analyzer",
                "stdout": "%(ng8w)s/var/log/ng8w.classify.out",
                "stdin": "/dev/null",
                "command": [
                    "%(ng8w)s/bin/classify.py"
                ],
                "check": [
                   "%(ng8w)s/bin/classify.py"
                ],
                "classify": "identifier",
                "stderr": "%(ng8w)s/var/log/ng8w.classify.err",
                "type": "Task",
                "pidfile": "ng8w.classify.pid"
            },
            {
                "name": "NG8W_CRON",
                "description": "cron",
                "stdout": "%(ng8w)s/var/log/ng8w.cron.out",
                "stdin": "/dev/null",
                "command": [
                    "%(ng8w)s/bin/ng8w_cron.py"
                ],
                "check": [
                    "%(ng8w)s/bin/ng8w_cron.py"
                ],
                "classify": "Task",
                "stderr": "%(ng8w)s/var/log/ng8w.cron.err",
                "type": "Task",
                "pidfile": "ng8w.cron.pid"
            },
            {
                "name": "process_done",
                "description": "usage for a file done process",
                "stdout": "%(ng8w)s/var/log/ng8w.process_done.out",
                "stdin": "/dev/null",
                "command": [
                    "%(ng8w)s/bin/file_erasure.py"
                ],
                "check": [
                    "%(ng8w)s/bin/file_erasure.py"
                ],
                "classify": "Task",
                "stderr": "%(ng8w)s/var/log/ng8w.process_done.err",
                "type": "Task",
                "pidfile": "ng8w.process-done.pid"
            },
            {
                "name": "notifyer",
                "description": "usage for a file notifyer process",
                "stdout": "%(ng8w)s/var/log/ng8w.notifyer.out",
                "stdin": "/dev/null",
                "command": [
                    "%(ng8w)s/bin/ng8w_notify.py"
                ],
                "check": [
                    "%(ng8w)s/bin/ng8w_notify.py"
                ],
                "classify": "Task",
                "stderr": "%(ng8w)s/var/log/ng8w.notifyer.err",
                "type": "Task",
                "pidfile": "ng8w.notifyer.pid"
            },
            {
                "name": "remote_manage_forwarder",
                "description": "usage for a remote manage",
                "stdout": "%(ng8w)s/var/log/ng8w.remote_manage.out",
                "stdin": "/dev/null",
                "command": [
                    "%(ng8w)s/bin/remote_manage_forwarder.sh"
                ],
                "check": [
                    "%(ng8w)s/bin/remote_manage_forwarder.sh"
                ],
                "classify": "Task",
                "stderr": "%(ng8w)s/var/log/ng8w.remote_manage.err",
                "type": "Task",
                "pidfile": "ng8w.remote_manage.pid"
            },
            {
                "name": "snmp_agent",
                "description": "snmp agent",
                "stdout": "%(ng8w)s/var/log/ng8w.snmp_agent.out",
                "stdin": "/dev/null",
                "command": [
                    "%(ng8w)s/bin/snmp_agent.py"
                ],
                "check": [
                    "%(ng8w)s/bin/snmp_agent.py"
                ],
                "classify": "Task",
                "stderr": "%(ng8w)s/var/log/ng8w.snmp_agent.err",
                "type": "Task",
                "pidfile": "ng8w.snmp_agent.pid"
            },
            {
                "name": "acpid",
                "description": "acpid",
                "stdout": "%(ng8w)s/var/log/ng8w.acpid.out",
                "stdin": "/dev/null",
                "command": [
                    "%(ng8w)s/bin/acpid",
                    "-f"
                ],
                "check": [
                    "%(ng8w)s/bin/acpid"
                ],
                "classify": "Task",
                "stderr": "%(ng8w)s/var/log/ng8w.acpid.err",
                "type": "Task",
                "pidfile": "ng8w.acpid.pid"
            },
            {
                "name": "bulkscan",
                "description": "bulk-scan remote directory by SMB/FTP/SFTP etc. protocols",
                "command": [
                    "%(ng8w)s/bin/bulk_scan.py",
                    "start",
                    "--config=%(ng8w)s/conf/bulk_scan.cfg"
                ],
                "stdin": "/dev/null",
                "stdout": "%(ng8w)s/var/log/ng8w.bulkscan.out",
                "stderr": "%(ng8w)s/var/log/ng8w.bulkscan.err",
                "check": [
                    "%(ng8w)s/bin/bulk_scan.py"
                ],
                "classify": "Task",
                "type": "Task",
                "pidfile": "ng8w.bulkscan.pid"
            },
            {
                "name": "ng8w/authen",
                "stdout": "%(ng8w)s/var/log/ng8w.authen.out",
                "stderr": "%(ng8w)s/var/log/ng8w.authen.err",
                "stdin": "/dev/null",
                "command": [
                    "%(ng8w)s/bin/authen_server.py"
                ],
                "pidfile": "ng8w.authen.pid",
                "type": "Task",
                "check": [
                    "%(ng8w)s/bin/authen_server.py"
                ],
                "classify": "infrastructure",
                "description": "user authentication service"
            },
            {
                "name": "ng8w/audit",
                "stdout": "%(ng8w)s/var/log/ng8w.audit.out",
                "stderr": "%(ng8w)s/var/log/ng8w.audit.err",
                "stdin": "/dev/null",
                "command": [
                    "%(ng8w)s/bin/audit_server.py"
                ],
                "pidfile": "ng8w.audit.pid",
                "type": "Task",
                "check": [
                    "%(ng8w)s/bin/audit_server.py"
                ],
                "classify": "infrastructure",
                "description": "user audit service"
            }
        ]
}
